[{"/Users/nattesharan/tdcx-tasks-spa/client/src/App.js":"1","/Users/nattesharan/tdcx-tasks-spa/client/src/components/login.js":"2","/Users/nattesharan/tdcx-tasks-spa/client/src/components/home.js":"3","/Users/nattesharan/tdcx-tasks-spa/client/src/utils/publicRoute.js":"4","/Users/nattesharan/tdcx-tasks-spa/client/src/utils/privateRoute.js":"5","/Users/nattesharan/tdcx-tasks-spa/client/src/utils/axios.js":"6","/Users/nattesharan/tdcx-tasks-spa/client/src/components/createTask.js":"7","/Users/nattesharan/tdcx-tasks-spa/client/src/index.js":"8","/Users/nattesharan/tdcx-tasks-spa/client/src/components/taskRow.js":"9","/Users/nattesharan/tdcx-tasks-spa/client/src/components/updateTask.js":"10","/Users/nattesharan/tdcx-tasks-spa/client/src/reportWebVitals.js":"11","/Users/nattesharan/tdcx-tasks-spa/client/src/utils/tokenUtils.js":"12","/Users/nattesharan/tdcx-tasks-spa/client/src/utils/api_factory.js":"13"},{"size":1843,"mtime":1609632331098,"results":"14","hashOfConfig":"15"},{"size":3359,"mtime":1609632058064,"results":"16","hashOfConfig":"15"},{"size":16222,"mtime":1609638199775,"results":"17","hashOfConfig":"15"},{"size":384,"mtime":1608926868917,"results":"18","hashOfConfig":"15"},{"size":434,"mtime":1608994207041,"results":"19","hashOfConfig":"15"},{"size":160,"mtime":1609163570331,"results":"20","hashOfConfig":"15"},{"size":2913,"mtime":1609245382635,"results":"21","hashOfConfig":"15"},{"size":500,"mtime":1608889042141,"results":"22","hashOfConfig":"15"},{"size":2638,"mtime":1609637934411,"results":"23","hashOfConfig":"15"},{"size":3109,"mtime":1609246161316,"results":"24","hashOfConfig":"15"},{"size":362,"mtime":1608889042142,"results":"25","hashOfConfig":"15"},{"size":271,"mtime":1609615566345,"results":"26","hashOfConfig":"15"},{"size":960,"mtime":1609632510619,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"d8vl0f",{"filePath":"30","messages":"31","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nattesharan/tdcx-tasks-spa/client/src/App.js",["59"],"/Users/nattesharan/tdcx-tasks-spa/client/src/components/login.js",["60"],"import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport '../css/login.css';\nimport { loginUser } from '../utils/api_factory';\nimport { saveToken } from '../utils/tokenUtils';\n\nexport default function Login(props) {\n    const setUser = props.setUser;\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [loginFailed, setLoginFailed] = useState(false);\n    const [errorMessage, setErrorMessage] = useState();\n    \n    const [errors, setErrors] = useState({});\n\n    const isFormValid = () => {\n        let formValid = true;\n        if(!username || !username.length) {\n            formValid = false;\n            setErrors(prevErrors => {\n                return {...prevErrors, username: 'Username is required'}\n            })\n        }\n        if(!password || !password.length) {\n            formValid = false;\n            setErrors(prevErrors => {\n                return {...prevErrors, password: 'Password is requied'}\n            })\n        }\n        return formValid;\n    };\n\n    async function login(credentials) {\n        return await loginUser(credentials).then(res => {\n            return res.data\n        })\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setErrors({});\n        setLoginFailed(false);\n        if(isFormValid()) {\n            const response = await login({\n                username: username,\n                password: password\n            });\n            if(!response.success) {\n                setLoginFailed(true);\n                setErrorMessage(response.message);\n            } else {\n                saveToken(response.token);\n                setUser(response.user);\n                props.history.push('/');\n            }\n        }\n    };\n    return(\n        <div className=\"login-wrapper\">\n            <div className=\"col-md-3 login-form-container\">\n                <form className=\"login-form m-3\" onSubmit={handleSubmit}>\n                    <label className=\"login-form-label mb-3\">\n                        Login\n                    </label>\n                    {loginFailed ? <label className=\"login-form-label mb-3 text-danger\">{errorMessage}</label> : null}\n                    <div className=\"form-group\">\n                        <input type=\"text\" className=\"form-control form-control-md\" placeholder=\"Username\" style={{ border: errors.username? '1px solid #dc3545': 'none'}} onChange={ e => setUsername(e.target.value)}/>\n                        { errors.username? <small className=\"form-text text-danger\">Please enter username.</small>: null }\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"password\" className=\"form-control form-control-md\" placeholder=\"Password\" style={{ border: errors.username? '1px solid #dc3545': 'none'}} onChange={ e => setPassword(e.target.value)}/>\n                        { errors.password? <small className=\"form-text text-danger\">Please enter password.</small>: null }\n                    </div>\n                    <div>\n                        <button type=\"submit\" className=\"col-md-12 login-button btn btn-primary\">Submit</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n      )\n}\n\n// Login.propTypes = {\n//     setToken: PropTypes.func.isRequired\n// }",["61","62"],"/Users/nattesharan/tdcx-tasks-spa/client/src/components/home.js",[],"/Users/nattesharan/tdcx-tasks-spa/client/src/utils/publicRoute.js",[],["63","64"],"/Users/nattesharan/tdcx-tasks-spa/client/src/utils/privateRoute.js",[],"/Users/nattesharan/tdcx-tasks-spa/client/src/utils/axios.js",[],["65","66"],"/Users/nattesharan/tdcx-tasks-spa/client/src/components/createTask.js",[],"/Users/nattesharan/tdcx-tasks-spa/client/src/index.js",[],"/Users/nattesharan/tdcx-tasks-spa/client/src/components/taskRow.js",[],"/Users/nattesharan/tdcx-tasks-spa/client/src/components/updateTask.js",[],"/Users/nattesharan/tdcx-tasks-spa/client/src/reportWebVitals.js",[],["67","68"],"/Users/nattesharan/tdcx-tasks-spa/client/src/utils/tokenUtils.js",[],"/Users/nattesharan/tdcx-tasks-spa/client/src/utils/api_factory.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"69","line":28,"column":9},{"ruleId":"70","severity":2,"message":"71","line":53,"column":17,"nodeType":"72","messageId":"73","endLine":53,"endColumn":24},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"74","replacedBy":"80"},{"ruleId":"76","replacedBy":"81"},{"ruleId":"74","replacedBy":"82"},{"ruleId":"76","replacedBy":"83"},"Parsing error: 'await' is only allowed within async functions\n\n  26 |         }\n  27 |         setLoading(true);\n> 28 |         await getProfile().then(res => {\n     |         ^\n  29 |             setLoading(false);\n  30 |             setUser(res.data);\n  31 |         }).catch(err => {","no-undef","'setUser' is not defined.","Identifier","undef","no-native-reassign",["84"],"no-negated-in-lhs",["85"],["84"],["85"],["84"],["85"],["84"],["85"],"no-global-assign","no-unsafe-negation"]